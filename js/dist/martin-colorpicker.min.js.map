{"version":3,"sources":["martin-colorpicker.min.js"],"names":["makePicker","template","Martin","width","height","newLayer","background","field","colorpicker","r","g","b","indicator","hue","rect","color","x","y","stroke","strokeWidth","bumpToTop","mousemove","e","data","Math","cos","PI","showPicker","input","picker","parentNode","insertBefore","canvas","loadPicker","inputs","document","getElementsByTagName","forEach","call","getAttribute","registerEffect","red","green","blue","this","base","context","loop","pixel","window","addEventListener"],"mappings":"AAqCA,QAASA,cAEL,GAAIC,GAAWC,QAEfD,GAASE,MAAM,KACfF,EAASG,OAAO,KAEhBH,EAASI,WAETJ,EAASK,WAAW,OAEpB,IAAIC,GAAQN,EAASO,aACjBC,EAAG,IACHC,EAAG,EACHC,EAAG,GAGPV,GAASW,YAETX,EAASI,UAET,IAAIQ,GAAMZ,EAASa,MACfC,MAAO,OACPC,EAAGf,EAASE,QAAU,GACtBc,EAAG,EACHb,OAAQ,EACRD,MAAO,GACPe,OAAQ,OACRC,YAAa,GAcjB,OAZAN,GAAIO,YAEJnB,EAASoB,UAAU,SAASC,GACxB,GAAIlB,GAASH,EAASG,SAClBmB,GACAd,EAA4C,IAAzCe,KAAKC,IAAKH,EAAEL,EAAIb,EAAU,EAAIoB,KAAKE,IAAY,MAClDhB,EAA8D,IAA3Dc,KAAKC,IAAKH,EAAEL,EAAIb,EAAU,EAAIoB,KAAKE,GAAM,EAAE,EAAKF,KAAKE,IAAY,MACpEf,EAA8D,IAA3Da,KAAKC,IAAKH,EAAEL,EAAIb,EAAU,EAAIoB,KAAKE,GAAM,EAAE,EAAKF,KAAKE,IAAY,MAExEnB,GAAMgB,KAAOA,IAGVtB,EAGX,QAAS0B,YAAWC,GAChB,GAAIC,GAAS7B,YACb4B,GAAME,WAAWC,aAAaF,EAAOG,OAAQJ,GAGjD,QAASK,cAEL,GAAIC,GAASC,SAASC,qBAAqB,YACxCC,QAAQC,KAAKJ,EAAQ,SAASN,GACY,uBAApCA,EAAMW,aAAa,cACpBZ,WAAWC,KA5FvB1B,OAAOsC,eAAe,cAAe,SAASjB,GAE1C,GAAIkB,GAAMlB,EAAKd,EACXiC,EAAQnB,EAAKb,EACbiC,EAAOpB,EAAKZ,EACZR,EAAQyC,KAAKC,KAAK1C,QAClBC,EAASwC,KAAKC,KAAKzC,QAEvBwC,MAAKE,QAAQC,KAAK,SAAS/B,EAAGC,EAAG+B,GAU7B,MARAA,GAAMvC,GAAK,IAAMgC,IAAQtC,EAAQ,GAAKa,GAAKb,EAAQsC,EACnDO,EAAMtC,GAAK,IAAMgC,IAAUvC,EAAQ,GAAKa,GAAKb,EAAQuC,EACrDM,EAAMrC,GAAK,IAAMgC,IAASxC,EAAQ,GAAKa,GAAKb,EAAQwC,EAEpDK,EAAMvC,GAAK,IAAMQ,EAAIb,EACrB4C,EAAMtC,GAAK,IAAMO,EAAIb,EACrB4C,EAAMrC,GAAK,IAAMM,EAAIb,EAEd4C,MAIf9C,OAAOsC,eAAe,YAAa,SAASjB,GAExC,GAAIpB,GAAQyC,KAAKC,KAAK1C,QAClBC,EAASwC,KAAKC,KAAKzC,QAEvBwC,MAAKE,QAAQC,KAAK,SAAS/B,EAAGC,EAAG+B,GAM7B,MALKhC,GAAI,GAAKb,IACV6C,EAAMvC,EAA2C,IAAvCe,KAAKC,IAAKR,EAAIb,EAAU,EAAIoB,KAAKE,IAAY,MACvDsB,EAAMtC,EAA6D,IAAzDc,KAAKC,IAAKR,EAAIb,EAAU,EAAIoB,KAAKE,GAAM,EAAE,EAAKF,KAAKE,IAAY,MACzEsB,EAAMrC,EAA6D,IAAzDa,KAAKC,IAAKR,EAAIb,EAAU,EAAIoB,KAAKE,GAAM,EAAE,EAAKF,KAAKE,IAAY,OAEtEsB,MAgEfC,OAAOC,iBAAiB,mBAAoBjB","file":"martin-colorpicker.min.js","sourcesContent":["Martin.registerEffect('colorpicker', function(data) {\n\n    var red = data.r,\n        green = data.g,\n        blue = data.b,\n        width = this.base.width(),\n        height = this.base.height();\n\n    this.context.loop(function(x, y, pixel) {\n\n        pixel.r = (255 - red) * (width - 20 - x) / width + red;\n        pixel.g = (255 - green) * (width - 20 - x) / width + green;\n        pixel.b = (255 - blue) * (width - 20 - x) / width + blue;\n\n        pixel.r -= 255 * y / height;\n        pixel.g -= 255 * y / height;\n        pixel.b -= 255 * y / height;\n\n        return pixel;\n    });\n});\n\nMartin.registerEffect('indicator', function(data) {\n\n    var width = this.base.width(),\n        height = this.base.height();\n\n    this.context.loop(function(x, y, pixel) {\n        if ( x + 20 > width ) {\n            pixel.r = Math.cos((y / height) * 2 * Math.PI) * 255 + 127.5;\n            pixel.g = Math.cos((y / height) * 2 * Math.PI + (2/3) * Math.PI) * 255 + 127.5;\n            pixel.b = Math.cos((y / height) * 2 * Math.PI + (4/3) * Math.PI) * 255 + 127.5;\n        }\n        return pixel;\n    });\n});\n\nfunction makePicker() {\n\n    var template = Martin();\n\n    template.width(220);\n    template.height(200);\n\n    template.newLayer();\n\n    template.background('#fff');\n\n    var field = template.colorpicker({\n        r: 255,\n        g: 0,\n        b: 0\n    });\n\n    template.indicator();\n\n    template.newLayer();\n\n    var hue = template.rect({\n        color: '#666',\n        x: template.width() - 18,\n        y: 1,\n        height: 4,\n        width: 18,\n        stroke: '#fff',\n        strokeWidth: 2\n    });\n    hue.bumpToTop();\n\n    template.mousemove(function(e) {\n        var height = template.height();\n        var data = {\n            r: Math.cos((e.y / height) * 2 * Math.PI) * 255 + 127.5,\n            g: Math.cos((e.y / height) * 2 * Math.PI + (2/3) * Math.PI) * 255 + 127.5,\n            b: Math.cos((e.y / height) * 2 * Math.PI + (4/3) * Math.PI) * 255 + 127.5,\n        };\n        field.data = data;\n    });\n\n    return template;\n}\n\nfunction showPicker(input) {\n    var picker = makePicker();\n    input.parentNode.insertBefore(picker.canvas, input);\n}\n\nfunction loadPicker() {\n\n    var inputs = document.getElementsByTagName('input');\n    [].forEach.call(inputs, function(input) {\n        if ( input.getAttribute('data-type') === 'martin-colorpicker' ) {\n            showPicker(input);\n        }\n    })\n}\n\nwindow.addEventListener('DOMContentLoaded', loadPicker);\n"],"sourceRoot":"/source/"}